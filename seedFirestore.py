# seed_firestore.py
import firebase_admin
from firebase_admin import credentials, firestore

# --- –ù–∞—Å—Ç—Ä–æ–π–∫–∞ ---
SERVICE_ACCOUNT_KEY_PATH = 'serviceAccountKey.json'
try:
    if not firebase_admin._apps:
        cred = credentials.Certificate(SERVICE_ACCOUNT_KEY_PATH)
        firebase_admin.initialize_app(cred)
    db = firestore.client()
    print("‚úì Firebase Admin SDK —É—Å–ø–µ—à–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω.")
except Exception as e:
    print(f"‚úó –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ Firebase: {e}")
    exit()

def seed_data():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö."""
    print("üî• –û—á–∏—Å—Ç–∫–∞ –∫–æ–ª–ª–µ–∫—Ü–∏–π...")
    collections_to_delete = ['apps', 'categories', 'collections', 'users', 'news']
    for coll in collections_to_delete:
        docs = db.collection(coll).stream()
        for doc in docs:
            doc.reference.delete()
    print("‚úì –ö–æ–ª–ª–µ–∫—Ü–∏–∏ –æ—á–∏—â–µ–Ω—ã.")

    batch = db.batch()
    
    # --- 1. –°–æ–∑–¥–∞–Ω–∏–µ –ö–∞—Ç–µ–≥–æ—Ä–∏–π ---
    print("‚è≥ –°–æ–∑–¥–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–π...")
    categories = {
        "games": {"name": "–ò–≥—Ä—ã", "iconUrl": "..."},
        "utils": {"name": "–£—Ç–∏–ª–∏—Ç—ã", "iconUrl": "..."},
        "finance": {"name": "–§–∏–Ω–∞–Ω—Å—ã", "iconUrl": "..."},
    }
    category_refs = {}
    for cat_id, cat_data in categories.items():
        ref = db.collection('categories').document(cat_id)
        batch.set(ref, cat_data)
        category_refs[cat_id] = ref.id
    print(f"‚úì {len(categories)} –∫–∞—Ç–µ–≥–æ—Ä–∏–π –¥–æ–±–∞–≤–ª–µ–Ω–æ.")

    # --- 2. –°–æ–∑–¥–∞–Ω–∏–µ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–π ---
    print("‚è≥ –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π...")
    apps = {
        "app1": {"name": "Pixel Adventure", "description": "–ó–∞—Ö–≤–∞—Ç—ã–≤–∞—é—â–µ–µ –ø–∏–∫—Å–µ–ª—å–Ω–æ–µ –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏–µ.", "categories": [category_refs["games"]], "iconUrl": "...", "screenshots": [], "openLink": "...", "isEditorsChoice": True, "votesCount": 120, "usageCount": 500},
        "app2": {"name": "Quick Notes", "description": "–ü—Ä–æ—Å—Ç–æ–π –±–ª–æ–∫–Ω–æ—Ç.", "categories": [category_refs["utils"]], "iconUrl": "...", "screenshots": [], "openLink": "...", "isEditorsChoice": False, "votesCount": 80, "usageCount": 1500},
        "app3": {"name": "TON Tracker", "description": "–û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –∫–æ—à–µ–ª—å–∫–æ–≤.", "categories": [category_refs["finance"]], "iconUrl": "...", "screenshots": [], "openLink": "...", "isEditorsChoice": True, "votesCount": 250, "usageCount": 800},
        "app4": {"name": "Space Invaders", "description": "–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∞—è –∞—Ä–∫–∞–¥–∞.", "categories": [category_refs["games"]], "iconUrl": "...", "screenshots": [], "openLink": "...", "isEditorsChoice": False, "votesCount": 95, "usageCount": 300},
    }
    app_refs = {}
    for app_id, app_data in apps.items():
        app_data['createdAt'] = firestore.SERVER_TIMESTAMP
        ref = db.collection('apps').document(app_id)
        batch.set(ref, app_data)
        app_refs[app_id] = ref.id
    print(f"‚úì {len(apps)} –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π –¥–æ–±–∞–≤–ª–µ–Ω–æ.")

    # --- 3. –°–æ–∑–¥–∞–Ω–∏–µ –ü–æ–¥–±–æ—Ä–æ–∫ ---
    print("‚è≥ –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–¥–±–æ—Ä–æ–∫...")
    collections_data = {
        "trending-this-week": {"title": "–¢—Ä–µ–Ω–¥—ã –ù–µ–¥–µ–ª–∏", "description": "–°–∞–º—ã–µ –ø–æ–ø—É–ª—è—Ä–Ω—ã–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –∑–∞ –ø–æ—Å–ª–µ–¥–Ω—é—é –Ω–µ–¥–µ–ª—é.", "appIds": [app_refs["app3"], app_refs["app1"], app_refs["app2"]]},
        "editors-choice": {"title": "–í—ã–±–æ—Ä –†–µ–¥–∞–∫—Ü–∏–∏", "description": "–ü—Ä–∏–ª–æ–∂–µ–Ω–∏—è, –∫–æ—Ç–æ—Ä—ã–µ –º—ã —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º.", "appIds": [app_refs["app1"], app_refs["app3"]]},
    }
    for coll_id, coll_data in collections_data.items():
        ref = db.collection('collections').document(coll_id)
        batch.set(ref, coll_data)
    print(f"‚úì {len(collections_data)} –ø–æ–¥–±–æ—Ä–æ–∫ –¥–æ–±–∞–≤–ª–µ–Ω–æ.")

    # --- 4. –°–æ–∑–¥–∞–Ω–∏–µ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (–≤–∫–ª—é—á–∞—è –∞–¥–º–∏–Ω–∞) ---
    print("‚è≥ –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π...")
    users_data = {
        "123456789": {"first_name": "Admin User", "role": "admin", "recentlyOpened": [app_refs["app1"]], "votedApps": []}, # ID –≤–∞—à–µ–≥–æ Telegram –¥–ª—è —Ç–µ—Å—Ç–æ–≤
        "987654321": {"first_name": "Regular User", "role": "user", "recentlyOpened": [app_refs["app2"], app_refs["app4"]], "votedApps": [app_refs["app2"]]},
    }
    for user_id, user_data in users_data.items():
        ref = db.collection('users').document(user_id)
        batch.set(ref, user_data)
    print(f"‚úì {len(users_data)} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –¥–æ–±–∞–≤–ª–µ–Ω–æ.")

    # --- 5. –û—Ç–ø—Ä–∞–≤–∫–∞ –≤—Å–µ—Ö –¥–∞–Ω–Ω—ã—Ö ---
    try:
        print("üöÄ –û—Ç–ø—Ä–∞–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö –≤ Firestore...")
        batch.commit()
        print("‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —É—Å–ø–µ—à–Ω–æ –Ω–∞–ø–æ–ª–Ω–µ–Ω–∞!")
    except Exception as e:
        print(f"‚úó –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –¥–∞–Ω–Ω—ã—Ö: {e}")

if __name__ == "__main__":
    seed_data()